// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  firstName String
  lastName  String
  email     String @unique
  password  String
  role      Role

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  SUPERADMIN
  PRODUCTMANAGER
  USER
}

model Product {
  id          Int            @id @default(autoincrement())
  slug        String         @unique
  name        String
  description String
  price       Int
  images      ProductImage[]
  category    Category       @relation(fields: [categoryId], references: [id])
  categoryId  Int
  isFeatured  Boolean        @default(false)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model ProductImage {
  id        String   @id @default(cuid())
  imageUrl  String // URL from Cloudinary
  publicId  String // Public ID from Cloudinary (for deletion/management)
  altText   String? // Optional alt text for accessibility
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade) // Ensure cascade delete if needed
  productId Int
}
